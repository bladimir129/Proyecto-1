# -*- coding: utf-8 -*-
"""Proyecto Nº 01

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kOuDnDaSYN3fGI2nuGGQqe1INSsHJXvm
"""
#importamos las librerias


import pandas as pd
import numpy as np

"""Ejercicio 1"""
#Creamos un diccionario ventas
ventas = {}
días = int(input('Número de los últimos días: '))
for i in range(días):
  i = 1+i
  ventas[i] = int(input('Introduce las ventas de hace ' + str(i) +' día(s): '))
lista1 = ventas.items() #El diccionario lo convertimos a lista para crear el dataframe
type(lista1) 
lista1 = list(lista1)
df1 = pd.DataFrame((lista1),columns = ['Día','Venta']) #Creamos el dataframe df1, definimos las columnas, Día y Venta
df1

"""Ejercicio 2"""

 "Creamos una función y dentro la función una serie. Definimos los Index. Y creamos un diccionario ingresos_clientes

def ingreso_mensual(ingreso):  
  ingreso = pd.Series(ingreso)
  estadística = pd.Series([ingreso.min(), ingreso.max(), ingreso.mean()], index=['Min', 'Max', 'Media'])
  return estadística
ingresos_clientes = {}
clientes = int(input('Ingrese número de clientes '))
for i in range(clientes):
  i = 1+i
  ingresos_clientes[i] = int(input('Introduce el ingreso mensual del cliente ' + str(i) +' : '))
print("Estadísticas")
ingreso_mensual(ingresos_clientes)

"""Ejercicio 3"""
"Creamos tres listas, mes, ventas y gastos

Mes = ["Enero","Febrero","Marzo","Abril","Mayo"]
Ventas = [30500,35600,28300,33900,42500]
Gastos = [22000,23450,18100,35700,32450]

#Creamos el dataframa df3 y definimos las columnas

df3 = pd.DataFrame()
df3['Mes'] = Mes
df3['Ventas'] = Ventas
df3['Gastos'] = Gastos
df3

#Agregamos una columna1

df3['Columna1']= df3.Gastos/df3.Ventas*100
df3

#Para agregar la columna 2, creamos una funcion y dentro de ella una condicion

def condicion(data):
  if(data['Ventas']>= 30000):
    return "Meta Superada"
  else:
    return "Meta no Superada"

#Aplicamos la función

df3['Columna2']=df3.apply(condicion,axis=1)
df3

#Para agregar la columna Sobregastos, creamos una funcion y dentro de ella una condicion, retornara 0 si no tienen sobregastos. y si es mayor a ventas retornará la diferencia

def condicion2(data):
  if(data['Gastos']> data['Ventas']):
    return data['Gastos'] - data['Ventas']
  else:
    return 0
df3['Sobregasto']=df3.apply(condicion2,axis=1)  #Aplicamos la función
df3

df3['Ventas'].iloc[2:].sum()  #Para sumar ciertas filas, usamos iloc y la función suma

df3['Gastos'].iloc[1:4].sum()  #Para sumar ciertas filas, usamos iloc y la función suma

"""Ejercicio 4 """


df4 = pd.read_csv("Data - Riesgos.csv",encoding ='cp1252')  #Se carga el archivo csv y nombramos al dataframe df4

df4    #Muestra el dataframe

df4.columns #Muestra el nombre de las columnas

df4.info()  #Muestra la información del dataframe, tipo de datos, cantidad de datos, y los no nulos

df4.isnull().sum() #Suma los nulos de las columnas para tener la cantidad exacta de nulos por columna

df4.head(10)  #muestra las 10 primeras filas

df4.tail(10) #muestra las 10 últimas filas

ar4 = df4.head(100)[['ID', 'edad', 'meses', 'max_ant', 'ingreso', 'score', 'tipo_vivienda',
       'zona', 'nivel', 'riesgo']].to_numpy()    #creamos un array(lista) con las 100 primeras filas del df4, agregamos los nombres de las columnas para tener toda la información de las fila.

ar4 #muestra el array
